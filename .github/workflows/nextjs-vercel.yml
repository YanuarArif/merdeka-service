name: Deploy to Vercel with Bun

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read # Allows the workflow to checkout the code
  id-token: write # Required for Vercel deployment

jobs:
  deploy:
    runs-on: ubuntu-latest # Uses the latest Ubuntu runner
    steps:
      # Step 1: Checkout code from the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Bun (package manager)
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest # You can change the version if needed

      # Step 3: Install dependencies using Bun
      - name: Install dependencies
        run: bun install

      # Step 4: Inject Environment Variables
      - name: Inject Environment Variables
        run: |
          echo "NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}" >> .env.local
          echo "NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}" >> .env.local

      # Step 5: Build the app using Bun
      - name: Build the Next.js app with Bun
        run: bun next build

      # Step 6: Deploy to Vercel
      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }} # Vercel API token to authenticate
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }} # Vercel Project ID
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }} # Vercel Organization ID
        run: |
          curl -sL https://github.com/vercel/vercel-action/releases/download/v20.0.0/vercel-action-linux-x64.tar.gz | tar -xz
          ./vercel-action-linux-x64 --token $VERCEL_TOKEN --prod --confirm --scope $VERCEL_ORG_ID --project $VERCEL_PROJECT_ID
